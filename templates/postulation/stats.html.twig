{% extends 'base.html.twig' %}

{% block title %}Postulation Statistics{% endblock %}

{% block body %}
    <div class="container mt-5">
        <h1 class="rt-section-title">Postulation Statistics</h1>
        <nav aria-label="breadcrumb" class="mt-3">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{{ path('app_dashboard') }}">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Postulation Statistics</li>
            </ol>
        </nav>

        <!-- Flash messages -->
        {% for message in app.flashes('success') %}
            <div class="alert alert-success mt-3">{{ message }}</div>
        {% endfor %}
        {% for message in app.flashes('warning') %}
            <div class="alert alert-warning mt-3">{{ message }}</div>
        {% endfor %}
        {% for message in app.flashes('error') %}
            <div class="alert alert-danger mt-3">{{ message }}</div>
        {% endfor %}

        <div class="card">
            <div class="card-body">
                <canvas id="postulationChart" style="width:100%;max-width:900px"></canvas>
            </div>
        </div>

        <div class="d-flex gap-2 mt-3">
            <a href="{{ path('app_dashboard') }}" class="btn btn-secondary btn-sm rt-rounded">
                <i class="fas fa-arrow-left me-1"></i> Back to Dashboard
            </a>
        </div>
    </div>
{% endblock %}

{% block js %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
    <script>
        let offerTitles = [];
        let postulationCounts = [];

        {% for row in postulation_stats %}
        offerTitles.push("{{ row.offer_title|e('js') }}");
        postulationCounts.push({{ row.postulation_count }});
        {% endfor %}

        // Function to generate random colors
        function getRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 15)];
            }
            return color;
        }

        // Chart data
        let chartData = {
            labels: offerTitles,
            datasets: [{
                data: postulationCounts,
                backgroundColor: offerTitles.map(() => getRandomColor()),
                borderColor: offerTitles.map(() => getRandomColor()),
                borderWidth: 1
            }]
        };

        // Chart options
        let chartOptions = {
            legend: { display: false },
            title: {
                display: true,
                text: "Number of Postulations per Job Offer"
            },
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        stepSize: 1
                    }
                }]
            }
        };

        // Create chart
        let ctx = document.getElementById('postulationChart').getContext('2d');
        let myChart = new Chart(ctx, {
            type: 'bar',
            data: chartData,
            options: chartOptions
        });
    </script>
{% endblock %}