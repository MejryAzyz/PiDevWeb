{% extends 'baseFront.html.twig' %}

{% block title %}Nos Cliniques - Emigrar{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <style>
        .search-input {
            position: relative;
            height: 100%;
        }
        .search-input i {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #666;
            z-index: 1;
        }
        .search-input select, 
        .search-input input,
        .search-button {
            height: 50px !important;
            padding-left: 40px !important;
        }
        .search-button {
            width: 100%;
            height: 50px !important;
            padding: 0 !important;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 16px;
            font-weight: 500;
        }
        .search-button i {
            margin-right: 8px;
        }
        .rt-banner-searchbox {
            padding: 15px;
            background: #fff;
            border-radius: 5px;
            box-shadow: 0 0 15px rgba(0,0,0,0.1);
        }
        .search-row {
            margin: 0 -10px;
        }
        .search-col {
            padding: 0 10px;
        }
        /* Pagination KNP personnalisée */
        .pagination {
            display: flex;
            justify-content: center;
            padding: 0;
            list-style: none;
            margin-top: 20px;
        }
        .pagination li {
            margin: 0 3px;
        }
        .pagination li a,
        .pagination li span {
            display: inline-block;
            min-width: 32px;
            min-height: 32px;
            line-height: 32px;
            text-align: center;
            background: #2563eb;
            color: #fff !important;
            border-radius: 6px;
            font-weight: bold;
            font-size: 18px;
            text-decoration: none;
            transition: background 0.2s, color 0.2s, box-shadow 0.2s;
            box-shadow: 0 2px 8px rgba(37,99,235,0.08);
            cursor: pointer;
            border: none;
        }
        .pagination li.active span,
        .pagination li.active a {
            background: #1e40af;
            color: #fff !important;
            box-shadow: 0 2px 8px rgba(30,64,175,0.15);
        }
        .pagination li a:hover,
        .pagination li span:hover {
            background: #1e40af;
            color: #fff !important;
        }
        /* Styles pour le sélecteur de langue */
        .language-selector {
            margin-bottom: 15px;
            text-align: right;
        }
        .language-selector select {
            padding: 8px;
            border-radius: 5px;
            border: 1px solid #ddd;
            background: white;
            cursor: pointer;
            width: auto;
            display: inline-block;
        }
        .currency-selector {
            margin-bottom: 15px;
            text-align: right;
        }
        .currency-selector select {
            padding: 8px;
            border-radius: 5px;
            border: 1px solid #ddd;
            background: white;
            cursor: pointer;
            width: auto;
            display: inline-block;
        }
        .converted-price {
            font-size: 0.8em;
            color: #666;
        }
    </style>
{% endblock %}

{% block body %}
<div class="rt-breadcump rt-breadcump-height">
    <div class="rt-page-bg rtbgprefix-cover" style="background-image: url({{ asset('coderthemes.com/osen/layouts/assets/images/backgrounds/bredcump.png') }})">
    </div>
    <div class="container">
        <div class="row rt-breadcump-height">
            <div class="col-12">
                <div class="breadcrumbs-content">
                    <h3>Nos Cliniques</h3>
                    <div class="breadcrumbs">
                        <span class="divider"><i class="icofont-home"></i></span>
                        <a href="#" title="Accueil">Accueil</a>
                        <span class="divider"><i class="icofont-simple-right"></i></span>
                        Nos Cliniques
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="bredcump--search-trip">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 mx-auto">
                    <!-- Sélecteur de langue amélioré -->
                    <div class="language-selector">
                        <select id="language-selector">
                            <option value="fr">Français</option>
                            <option value="en">English</option>
                            <option value="es">Español</option>
                            <option value="de">Deutsch</option>
                            <option value="ar">العربية</option>
                        </select>
                    </div>

                    <!-- Sélecteur de devise -->
                    <!-- <div class="currency-selector">
                        <select id="currency-selector">
                            <option value="EUR">EUR (€)</option>
                            <option value="USD">USD ($)</option>
                            <option value="GBP">GBP (£)</option>
                            <option value="JPY">JPY (¥)</option>
                            <option value="CAD">CAD ($)</option>
                        </select>
                    </div> -->

                    <div class="rt-banner-searchbox trip-search">
                        <form action="{{ path('app_clinique_front_index') }}" method="get" class="rt-input-group">
                            <div class="row search-row">
                                <div class="col-md-5 search-col">
                                    <div class="search-input">
                                        <i class="icofont-world"></i>
                                        <input type="text" class="form-control" name="pays" placeholder="Rechercher par pays" value="{{ app.request.query.get('pays') }}">
                                    </div>
                                </div>
                                <div class="col-md-4 search-col">
                                    <div class="search-input">
                                        <i class="icofont-doctor"></i>
                                        <select name="specialty" class="form-control">
                                            <option value="">Toutes les spécialités</option>
                                            {% for specialite in specialites %}
                                                <option value="{{ specialite.id_specialite }}" {% if app.request.query.get('specialty') == specialite.id_specialite %}selected{% endif %}>
                                                    {{ specialite.nom }}
                                                </option>
                                            {% endfor %}
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-3 search-col">
                                    <button type="submit" class="rt-btn rt-gradient pill text-uppercase search-button">
                                        <i class="icofont-search"></i> Rechercher
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="spacer-bottom"></div>
<section class="content-area">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 mx-auto col-md-7 mb-5 mb-lg-0">
                <div class="rt-sidebar-group">
                    <div class="rt-widget widget_range-slider">
                        <h3 class="rt-widget-title">Filtrer par prix</h3>
                        <form action="{{ path('app_clinique_front_index') }}" method="get" id="price-filter-form">
                            <input type="hidden" name="page" value="{{ currentPage|default(1) }}">
                            <div class="slider-range" id="price-range"></div>
                            <div class="price_slider_amount mt-4">
                                <div class="clearfix">
                                    <div class="float-left">
                                        <span>Prix :</span>
                                    </div>
                                    <div class="float-right">
                                        <input type="text" id="price-amount" readonly style="border:0; font-weight:bold;" name="price_range">
                                    </div>
                                </div>
                            </div>
                            <div class="text-center mt-4">
                                <button type="submit" class="rt-btn rt-gradient rounded-sm rt-sm text-uppercase">Filtrer</button>
                            </div>
                        </form>
                    </div>
                    <div class="rt-widget widget_specialty-filter">
                        <h3 class="rt-widget-title">Filtrer par spécialité</h3>
                        <form action="{{ path('app_clinique_front_index') }}" method="get" id="specialty-filter-form">
                            <select name="specialty" class="form-control">
                                <option value="">Toutes les spécialités</option>
                                {% for specialite in specialites %}
                                    <option value="{{ specialite.id_specialite }}">{{ specialite.nom }}</option>
                                {% endfor %}
                            </select>
                            <div class="text-center mt-4">
                                <button type="submit" class="rt-btn rt-gradient rounded-sm rt-sm text-uppercase">Filtrer</button>
                            </div>
                        </form>
                    </div>
                    <div class="rt-widget widget_currency-converter">
                        <h3 class="rt-widget-title">Convertir les prix</h3>
                        <div class="currency-selector">
                            <select id="currency-selector" class="form-control">
                                <option value="EUR">EUR (€)</option>
                                <option value="USD">USD ($)</option>
                                <option value="GBP">GBP (£)</option>
                                <option value="JPY">JPY (¥)</option>
                                <option value="CAD">CAD ($)</option>
                                <option value="TND">TND (د.ت)</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-9">
                <div class="box-style__1 rt-mb-30">
                    <form action="{{ path('app_clinique_front_index') }}" method="get" class="row">
                        <div class="col-lg-3 col-md-6 mb-3 mb-lg-0">
                            <select name="sort" id="sort-select" class="rt-selectactive banner-select" style="width: 100%">
                                <option value="c.id_clinique" {% if app.request.query.get('sort') == 'c.id_clinique' %}selected{% endif %}>Tous</option>
                                <option value="c.prix" {% if app.request.query.get('sort') == 'c.prix' %}selected{% endif %}>Prix croissant</option>
                                <option value="c.prix" {% if app.request.query.get('sort') == 'c.prix' and app.request.query.get('direction') == 'desc' %}selected{% endif %}>Prix décroissant</option>
                                <option value="docteurCount" {% if app.request.query.get('sort') == 'docteurCount' %}selected{% endif %}>Nombre de docteurs</option>
                            </select>
                        </div>
                        <!-- <div class="col-lg-3 col-md-6 mb-3 mb-lg-0">
                            <select name="pays" class="rt-selectactive banner-select" style="width: 100%">
                                <option value="">Tous les pays</option>
                                <option value="France" {% if app.request.query.get('pays') == 'France' %}selected{% endif %}>France</option>
                                <option value="Allemagne" {% if app.request.query.get('pays') == 'Allemagne' %}selected{% endif %}>Allemagne</option>
                                <option value="Espagne" {% if app.request.query.get('pays') == 'Espagne' %}selected{% endif %}>Espagne</option>
                                <option value="Italie" {% if app.request.query.get('pays') == 'Italie' %}selected{% endif %}>Italie</option>
                            </select>
                        </div> -->
                        <div class="col-lg-3 rt-input-group mini col-md-6 mb-3 mb-md-0">
                            <select name="specialty" class="rt-selectactive banner-select" style="width: 100%">
                                <option value="">Toutes les spécialités</option>
                                {% for specialite in specialites %}
                                    <option value="{{ specialite.id_specialite }}" {% if app.request.query.get('specialty') == specialite.id_specialite %}selected{% endif %}>
                                        {{ specialite.nom }}
                                    </option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="col-lg-3 col-md-6">
                            <button type="submit" class="rt-btn rt-gradient pill rt-sm text-uppercase d-block w-100">Appliquer</button>
                        </div>

                        {# Garder les autres paramètres de recherche #}
                        {% if app.request.query.get('price_range') %}
                            <input type="hidden" name="price_range" value="{{ app.request.query.get('price_range') }}">
                        {% endif %}
                    </form>
                </div>

                <input type="hidden" name="direction" id="sort-direction" value="{{ app.request.query.get('direction', 'asc') }}">
                <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        const sortSelect = document.getElementById('sort-select');
                        const directionInput = document.getElementById('sort-direction');
                        sortSelect.addEventListener('change', function() {
                            if (sortSelect.selectedIndex === 1) { // Prix croissant
                                directionInput.value = 'asc';
                            } else if (sortSelect.selectedIndex === 2) { // Prix décroissant
                                directionInput.value = 'desc';
                            } else {
                                directionInput.value = 'asc';
                            }
                        });
                    });
                </script>

                {% for clinique in cliniques %}
                <div class="box-style__1 rt-mb-30">
                    <div class="hotel-inner-content row">
                        <div class="hotel-thumb col-md-3 mb-5 mb-md-0">
                            {% if clinique.cliniquePhotos|length > 0 %}
                                {# Accéder à la première photo avec first #}
                                <div class="hotel-bg rtbgprefix-cover" style="background-image: url('{{ asset(clinique.cliniquePhotos.first.photo_url) }}')"></div>
                            {% else %}
                                <div class="hotel-bg rtbgprefix-cover" style="background-image: url('{{ asset('images/mayoClinic.jpg') }}')"></div>
                            {% endif %}
                        </div>
                        <div class="hotel-text col-md-9">
                            <div class="top">
                                <h5>{{ clinique.nom }}</h5>
                                <!-- <p>{{ clinique.description|slice(0, 100) ~ '...' }}</p> -->
                                <p class="lead text-dark">{{ clinique.description }}</p>
                            </div>
                            <div class="middle-text d-md-flex justify-content-md-between rt-mt-20">
                                <div class="left_column">
                                    <span class="f-size-12 text-878">( {{ clinique.docteurs.count }} Docteurs )</span>
                                    <span class="text-555 f-size-16 d-block rt-mt-15">
                                        <span class="rt-mr-15"><i class="icofont-location-pin primary-color rt-mr-4"></i>{{ clinique.adresse }}</span>
                                    </span>
                                </div>
                                <div class="right_column text-left text-md-right">
                                    <span class="d-block text-primary f-size-24 rt-semiblod title-font">
                                        <span class="original-price">{{ clinique.prix|number_format(2) }} €</span>
                                        <span class="converted-price"></span>
                                    </span>
                                    <span class="d-block f-size-12 text-878">Par consultation</span>
                                </div>
                            </div>
                            <div class="footer-elements d-flex justify-content-between align-items-center align-items-end">
                                <div class="left">
                                    <a href="#">Contactez-nous</a>
                                </div>
                                <div class="right">
                                    {% if clinique.id_clinique is not null %}
                                    <div class="right">
                                        <a href="{{ path('app_clinique_front_show', {'id_clinique': clinique.id_clinique}) }}" class="rt-btn rt-gradient pill rt-sm3 text-uppercase text-white">Voir Détails</a>
                                    </div>
                                    {% else %}
                                        <span class="text-muted">Détails indisponibles</span>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                {% else %}
                    <p>Aucune clinique trouvée.</p>
                {% endfor %}

                <nav aria-label="Page navigation example">
                    <ul class="pagination rt-paganation justify-content-center">
                        {{ knp_pagination_render(cliniques) }}
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</section>
{% endblock %}

{% block javascripts %}
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script>
    // --- Traduction optimisée avec MyMemory ---
    function getTranslatableElements() {
        return Array.from(document.querySelectorAll('h1, h2, h3, h4, h5, h6, p, button, label, a, .rt-btn, .search-button'))
            .filter(el => el.children.length === 0 && el.textContent.trim());
    }

    function chunkArray(arr, maxLen) {
        let result = [];
        for (let i = 0; i < arr.length; i += maxLen) {
            result.push(arr.slice(i, i + maxLen));
        }
        return result;
    }

    async function translateBulk(texts, targetLang) {
        let results = [];
        let currentChunk = [];
        let currentLength = 0;
        for (let text of texts) {
            if ((currentLength + text.length) > 450 && currentChunk.length > 0) {
                results.push(currentChunk);
                currentChunk = [];
                currentLength = 0;
            }
            currentChunk.push(text);
            currentLength += text.length;
        }
        if (currentChunk.length > 0) results.push(currentChunk);

        let translations = [];
        for (let chunk of results) {
            const joined = chunk.join('|||');
            const encodedText = encodeURIComponent(joined);
            const sourceLang = 'fr';
            const url = `https://api.mymemory.translated.net/get?q=${encodedText}&langpair=${sourceLang}|${targetLang}`;
            try {
                const response = await fetch(url);
                const data = await response.json();
                if (data.responseStatus === 429) {
                    // Trop de requêtes
                    translations = translations.concat(chunk.map(() => '[Limite API atteinte]'));
                    continue;
                }
                if (data.responseStatus !== 200) throw new Error('Translation error');
                let translated = data.responseData.translatedText.split('|||');
                if (translated.length !== chunk.length) {
                    translated = chunk.map((t, i) => data.responseData.translatedText.substring(i * Math.floor(data.responseData.translatedText.length / chunk.length), (i + 1) * Math.floor(data.responseData.translatedText.length / chunk.length)));
                }
                translations = translations.concat(translated);
            } catch (e) {
                // En cas d'erreur, on garde le texte original
                translations = translations.concat(chunk);
            }
        }
        return translations;
    }

    async function translatePage(targetLang) {
        const loadingIndicator = document.createElement('div');
        loadingIndicator.style.cssText = `
            position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%);
            background: rgba(0,0,0,0.8); color: white; padding: 20px; border-radius: 5px; z-index: 9999;`;
        loadingIndicator.textContent = 'Traduction en cours...';
        document.body.appendChild(loadingIndicator);

        try {
            const elements = getTranslatableElements();
            const texts = elements.map(el => el.textContent.trim());
            const translations = await translateBulk(texts, targetLang);
            elements.forEach((el, i) => { el.textContent = translations[i]; });
            localStorage.setItem('selectedLanguage', targetLang);

            // Message succès
            const successMessage = document.createElement('div');
            successMessage.style.cssText = `
                position: fixed; top: 20px; right: 20px; background: #4CAF50; color: white;
                padding: 10px 20px; border-radius: 5px; z-index: 9999;`;
            successMessage.textContent = 'Traduction terminée (ou partielle si limite API)';
            document.body.appendChild(successMessage);
            setTimeout(() => { document.body.removeChild(successMessage); }, 3000);
        } catch (error) {
            console.error('Erreur lors de la traduction de la page:', error);
            const errorMessage = document.createElement('div');
            errorMessage.style.cssText = `
                position: fixed; top: 20px; right: 20px; background: #f44336; color: white;
                padding: 10px 20px; border-radius: 5px; z-index: 9999;`;
            errorMessage.textContent = 'Erreur de traduction ou limite API atteinte. Certains textes peuvent ne pas être traduits.';
            document.body.appendChild(errorMessage);
            setTimeout(() => { document.body.removeChild(errorMessage); }, 4000);
        } finally {
            document.body.removeChild(loadingIndicator);
        }
    }

    document.getElementById('language-selector').addEventListener('change', async function(e) {
        const targetLang = e.target.value;
        await translatePage(targetLang);
    });

    document.addEventListener('DOMContentLoaded', async function() {
        const savedLanguage = localStorage.getItem('selectedLanguage');
        if (savedLanguage && savedLanguage !== 'fr') {
            document.getElementById('language-selector').value = savedLanguage;
            await translatePage(savedLanguage);
        }
    });

    $(document).ready(function() {
        // Récupérer les valeurs min et max depuis le contrôleur avec des valeurs par défaut
        const minPrice = {{ min_price is defined ? min_price : 0 }};
        const maxPrice = {{ max_price is defined ? max_price : 1000 }};
        const currentMinPrice = {{ current_min_price is defined ? current_min_price : min_price is defined ? min_price : 0 }};
        const currentMaxPrice = {{ current_max_price is defined ? current_max_price : max_price is defined ? max_price : 1000 }};

        $("#price-range").slider({
            range: true,
            min: minPrice,
            max: maxPrice,
            values: [currentMinPrice, currentMaxPrice],
            slide: function(event, ui) {
                $("#price-amount").val(ui.values[0] + "€ - " + ui.values[1] + "€");
            },
            change: function(event, ui) {
                // Mettre à jour la valeur cachée
                $("input[name='price_range']").val(ui.values[0] + "," + ui.values[1]);
            }
        });

        // Initialiser l'affichage du prix
        $("#price-amount").val($("#price-range").slider("values", 0) +
            "€ - " + $("#price-range").slider("values", 1) + "€");
        
        // Définir la valeur initiale du champ caché
        $("input[name='price_range']").val(
            $("#price-range").slider("values", 0) + "," + 
            $("#price-range").slider("values", 1)
        );
    });

    // Fonction pour convertir les prix
    async function convertPrices(targetCurrency) {
        try {
            const response = await fetch(`https://api.exchangerate-api.com/v4/latest/EUR`);
            const data = await response.json();
            const rate = data.rates[targetCurrency];
            
            document.querySelectorAll('.original-price').forEach(priceElement => {
                const originalPrice = parseFloat(priceElement.textContent.replace('€', '').trim());
                const convertedPrice = (originalPrice * rate).toFixed(2);
                const convertedElement = priceElement.nextElementSibling;
                convertedElement.textContent = ` (${convertedPrice} ${targetCurrency})`;
            });
        } catch (error) {
            console.error('Erreur lors de la conversion des prix:', error);
        }
    }

    // Gestionnaire d'événements pour le sélecteur de devise
    document.getElementById('currency-selector').addEventListener('change', function(e) {
        const targetCurrency = e.target.value;
        convertPrices(targetCurrency);
        localStorage.setItem('selectedCurrency', targetCurrency);
    });

    // Charger la devise sauvegardée au chargement de la page
    document.addEventListener('DOMContentLoaded', function() {
        const savedCurrency = localStorage.getItem('selectedCurrency');
        if (savedCurrency) {
            document.getElementById('currency-selector').value = savedCurrency;
            convertPrices(savedCurrency);
        }
    });
    </script>
{% endblock %}
